name: Docker Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/coraza-validate-server
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test image (only on main/tags, not PRs)
        if: github.event_name != 'pull_request'
        run: |
          # Pull the image we just pushed
          docker pull $(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          # Run a basic test - check if the container starts properly
          docker run --rm -d --name test-container -p 8080:8080 -e CORAZA_RULES_DIR=/app $(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          # Wait for container to start
          sleep 5
          # Check container is running
          docker ps | grep test-container
          # Clean up
          docker rm -f test-container || true

      - name: Build server binary for release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          go mod download
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o validate-server-linux-amd64 server.go
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o validate-server-darwin-amd64 server.go
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o validate-server-darwin-arm64 server.go
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o validate-server-windows-amd64.exe server.go

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            validate-server-linux-amd64
            validate-server-darwin-amd64
            validate-server-darwin-arm64
            validate-server-windows-amd64.exe
          draft: false
          prerelease: false
